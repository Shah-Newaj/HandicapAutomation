{"name": "test_recruitment_request_ddt", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//i[@class='fa fa-edit'])[1]\"}\n  (Session info: chrome=128.0.6613.138); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00C481F3+26163]\n\t(No symbol) [0x00BD9CA4]\n\t(No symbol) [0x00AD24C3]\n\t(No symbol) [0x00B17453]\n\t(No symbol) [0x00B1762B]\n\t(No symbol) [0x00B56B62]\n\t(No symbol) [0x00B3AD04]\n\t(No symbol) [0x00B54661]\n\t(No symbol) [0x00B3AA56]\n\t(No symbol) [0x00B0BE89]\n\t(No symbol) [0x00B0C8CD]\n\tGetHandleVerifier [0x00F1CED3+2994963]\n\tGetHandleVerifier [0x00F71749+3341193]\n\tGetHandleVerifier [0x00CD7ACF+614159]\n\tGetHandleVerifier [0x00CDF15C+644508]\n\t(No symbol) [0x00BE27DD]\n\t(No symbol) [0x00BDF6D8]\n\t(No symbol) [0x00BDF875]\n\t(No symbol) [0x00BD1BF6]\n\tBaseThreadInitThunk [0x76187BA9+25]\n\tRtlInitializeExceptionChain [0x7727C11B+107]\n\tRtlClearBits [0x7727C09F+191]", "trace": "self = <test_recruitmentRequest_DDT.Test_Recruitment_Request_DDT object at 0x0000028937C4FB50>, setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"348a3d781b4cf51264e4a1a98a50e5f8\")>\n\n    def test_recruitment_request_ddt(self,setup):\n        self.logger.info(\"*************** Test_ddt_admin_Login *******************\")\n        self.logger.info(\"*************** Verifying Login DDT Test  *******************\")\n        self.driver = setup\n        self.driver.get(self.baseURL)\n        self.driver.maximize_window()\n        self.lp = LoginPage(self.driver)\n        self.lp.setUserName(self.username)\n        self.lp.setPassword(self.password)\n        self.lp.clickLogin()\n        time.sleep(3)\n        self.logger.info(\"************* Login succesful **********\")\n    \n        self.logger.info(\"************* Starting Recruitment Request DDT **********\")\n    \n        self.rows = XLUtils.getRowCount(self.path, 'addRequest')\n        print(\"Number of rows in excel\", self.rows)\n    \n        lst_status = [] #Empty variable\n    \n        for r in range(2, self.rows+1):\n            self.project = XLUtils.readData(self.path,'addRequest', r, 1)\n            self.hmanager = XLUtils.readData(self.path, 'addRequest', r, 2)\n            self.vposition = XLUtils.readData(self.path, 'addRequest', r, 3)\n            self.jobdes = XLUtils.readData(self.path, 'addRequest', r, 4)\n            self.npos = XLUtils.readData(self.path, 'addRequest', r, 5)\n            self.pemployee = XLUtils.readData(self.path, 'addRequest', r, 6)\n            self.location = XLUtils.readData(self.path, 'addRequest', r, 7)\n            self.appointment = XLUtils.readData(self.path, 'addRequest', r, 8)\n            self.jobstartdate = XLUtils.readData(self.path, 'addRequest', r, 9)\n            self.jobenddate = XLUtils.readData(self.path, 'addRequest', r, 10)\n            self.vacancycaused = XLUtils.readData(self.path, 'addRequest', r, 11)\n            self.salaryrangefrom = XLUtils.readData(self.path, 'addRequest', r, 12)\n            self.recruitmenttype = XLUtils.readData(self.path, 'addRequest', r, 13)\n            self.hod = XLUtils.readData(self.path, 'addRequest', r, 14)\n            self.salaryrangeto = XLUtils.readData(self.path, 'addRequest', r, 15)\n            self.comments = XLUtils.readData(self.path, 'addRequest', r, 16)\n    \n    \n            self.addreq = HiringManager(self.driver)\n            self.addreq.clickRecruitmentRequest()\n            self.addreq.clickHiringManager()\n            self.addreq.clickAddNew()\n    \n            self.logger.info(\"************* Providing recruitment request info **********\")\n            self.addreq.selectProject(self.project)\n            self.addreq.setHiringManager(self.hmanager)\n            self.addreq.setVacantPosition(self.vposition)\n            self.addreq.selectJobDescription(self.jobdes)\n            self.addreq.setNumberofPosition(self.npos)\n            self.addreq.selectPresentEmployee(self.pemployee)\n            self.addreq.setLocation(self.location)\n            self.addreq.selectAppointment(self.appointment)\n            self.addreq.setJobStartDate(self.jobstartdate)\n            self.addreq.setJobEndingDate(self.jobenddate)\n            self.addreq.setVacancyCaused(self.vacancycaused)\n            self.addreq.setSalaryRangeFrom(self.salaryrangefrom)\n            self.addreq.selectRecruitmentType(self.recruitmenttype)\n            time.sleep(2)\n            self.addreq.selectHOD(self.hod)\n            self.addreq.setSalaryRangeTo(self.salaryrangeto)\n            self.addreq.setComments(self.comments)\n            time.sleep(3)\n            flag = self.driver.find_element(By.NAME, \"save_and_update\")\n            self.driver.execute_script(\"arguments[0].scrollIntoView();\", flag)\n            time.sleep(2)\n            self.addreq.clickSubmit()\n    \n        self.logger.info(\"************* Starting Edit Recruitment Request DDT **********\")\n    \n        self.rows = XLUtils.getRowCount(self.path, 'editRequest')\n        print(\"Number of rows in excel\", self.rows)\n    \n        lst_status = []  # Empty variable\n    \n        for r in range(2, self.rows + 1):\n            self.project = XLUtils.readData(self.path, 'editRequest', r, 1)\n            self.hmanager = XLUtils.readData(self.path, 'editRequest', r, 2)\n            self.vposition = XLUtils.readData(self.path, 'editRequest', r, 3)\n            self.jobdes = XLUtils.readData(self.path, 'editRequest', r, 4)\n            self.npos = XLUtils.readData(self.path, 'editRequest', r, 5)\n            self.pemployee = XLUtils.readData(self.path, 'editRequest', r, 6)\n            self.location = XLUtils.readData(self.path, 'editRequest', r, 7)\n            self.appointment = XLUtils.readData(self.path, 'editRequest', r, 8)\n            self.jobstartdate = XLUtils.readData(self.path, 'editRequest', r, 9)\n            self.jobenddate = XLUtils.readData(self.path, 'editRequest', r, 10)\n            self.vacancycaused = XLUtils.readData(self.path, 'editRequest', r, 11)\n            self.salaryrangefrom = XLUtils.readData(self.path, 'editRequest', r, 12)\n            self.recruitmenttype = XLUtils.readData(self.path, 'editRequest', r, 13)\n            self.hod = XLUtils.readData(self.path, 'editRequest', r, 14)\n            self.salaryrangeto = XLUtils.readData(self.path, 'editRequest', r, 15)\n            self.comments = XLUtils.readData(self.path, 'editRequest', r, 16)\n    \n            self.editreq = HiringManager(self.driver)\n            # self.editreq.clickRecruitmentRequest()\n            # self.editreq.clickHiringManager()\n>           self.editreq.clickEdit()\n\ntestCases\\RecruitmentRequestDDT\\test_recruitmentRequest_DDT.py:118: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\HiringManagerPage.py:45: in clickEdit\n    self.driver.find_element(By.XPATH, self.action_btn_edit_xpath).click()\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000028937C36AD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x76187BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7727C11B+107]\\\\n\\\\tRtlClearBits [0x7727C09F+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//i[@class='fa fa-edit'])[1]\"}\nE         (Session info: chrome=128.0.6613.138); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00C481F3+26163]\nE       \t(No symbol) [0x00BD9CA4]\nE       \t(No symbol) [0x00AD24C3]\nE       \t(No symbol) [0x00B17453]\nE       \t(No symbol) [0x00B1762B]\nE       \t(No symbol) [0x00B56B62]\nE       \t(No symbol) [0x00B3AD04]\nE       \t(No symbol) [0x00B54661]\nE       \t(No symbol) [0x00B3AA56]\nE       \t(No symbol) [0x00B0BE89]\nE       \t(No symbol) [0x00B0C8CD]\nE       \tGetHandleVerifier [0x00F1CED3+2994963]\nE       \tGetHandleVerifier [0x00F71749+3341193]\nE       \tGetHandleVerifier [0x00CD7ACF+614159]\nE       \tGetHandleVerifier [0x00CDF15C+644508]\nE       \t(No symbol) [0x00BE27DD]\nE       \t(No symbol) [0x00BDF6D8]\nE       \t(No symbol) [0x00BDF875]\nE       \t(No symbol) [0x00BD1BF6]\nE       \tBaseThreadInitThunk [0x76187BA9+25]\nE       \tRtlInitializeExceptionChain [0x7727C11B+107]\nE       \tRtlClearBits [0x7727C09F+191]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "log", "source": "09cc9231-26b2-4df3-9c31-c0f14b3fa0dd-attachment.txt", "type": "text/plain"}], "start": 1726717010681, "stop": 1726717038349, "uuid": "bb3cf578-086f-4f07-991e-fe586c9fafee", "historyId": "7bfb6d25aa37d399295247d243b5a30e", "testCaseId": "7bfb6d25aa37d399295247d243b5a30e", "fullName": "testCases.RecruitmentRequestDDT.test_recruitmentRequest_DDT.Test_Recruitment_Request_DDT#test_recruitment_request_ddt", "labels": [{"name": "parentSuite", "value": "testCases.RecruitmentRequestDDT"}, {"name": "suite", "value": "test_recruitmentRequest_DDT"}, {"name": "subSuite", "value": "Test_Recruitment_Request_DDT"}, {"name": "host", "value": "SCI-BD-L18-1814"}, {"name": "thread", "value": "18204-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.RecruitmentRequestDDT.test_recruitmentRequest_DDT"}]}